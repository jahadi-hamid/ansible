#Preparing Docker Service
- name: Set Containerd Directory
  file:
    path: /etc/containerd
    state: directory
  when:
    - cri == "containerd"

- name: Set Containerd Configuration
  copy:
    src: config.toml
    dest: /etc/containerd/config.toml
    mode: 0644
  when:
    - cri == "containerd"

- name: Add http proxy to Containerd.service
  lineinfile:
    path: /etc/systemd/system/multi-user.target.wants/containerd.service
#    regexp: '^Environment=HTTP_PROXY='
    insertafter: '^\[Service\]'
    line: Environment="{{ item.name }}={{ item.value }}"
  loop:
    - { name: 'HTTP_PROXY', value: '{{ http_proxy }}' }
    - { name: 'HTTPS_PROXY', value: '{{ http_proxy }}' }
    - { name: 'no_proxy', value: '{{ no_proxy }}'}
  notify: 
    - reload systemd daemon
    - restart containerd
    - restart kubelet
  tags: 
    - service
  when:
    - cri == "containerd"

#Preparing Docker Service
- name: Set Docker Configuration
  copy:
    src: daemon.json
    dest: /etc/docker/daemon.json
    mode: 0644
  when:
    - cri == "docker"

- name: Add http proxy to Docker.service
  lineinfile:
    path: /lib/systemd/system/docker.service
    regexp: '^Environment=HTTP_PROXY='
    insertafter: '^Restart=always'
    line: Environment="{{ item }}_PROXY={{ http_proxy }}"
  loop: [HTTP,HTTPS]
  notify: 
    - reload systemd daemon
    - restart Docker
    - restart kubelet
  tags: 
    - service
  when:
    - cri == "docker"

- meta: flush_handlers
